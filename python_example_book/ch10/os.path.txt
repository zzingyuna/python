>>>>>> 경로명 조작
os.path.expanduser(path)
os.path.expandvars(path)
예)
import os
import os.path

os.listdir('.') #<--- 1
os.listdir('~') #<--- 2
os.listdir(os.path.expanduser('~')) #<--- 3
os.environ["TEST_DIR"] = '~/test'   #<--- 4
os.environ.get('TEST_DIR')
os.path.expandvars('$TEST_DIR/python') #<--- 5

"""
코드1: 현재 디렉토리에 있는 파일과 디렉토리 목록을 리스트로 받아올 수 있다
코드2: ~은 HOME 디렉토리를 의미, FileNotFoundError가 발생됨
코드3: 에러
코드5: 경로명에 있는 환경변수를 해석해서 경로명을 변경해준다
"""

os.path.join(path, *paths)
윈도우는 "/", 리눅스나 맥은"\"를 사용하여 경로 구분, join()함수는 주어진 문자열을 사용해서 하나의 경로명을 만들어준다.
예)
d=['/','dir1','dir2','file']
os.path.join(*d)
결과)
'/dir1/dir2/file'


os.path.abspath(path) #<-- 절대경로 반환
os.path.normpath(path) #<-- 경로명을 단순하게 줄여준다
os.path.relpath(path, start=os.curdir) #<-- 상대 경로를 만든다.

os.path.exists(path)
주어진 경로에 ㅏ디렉토리 혹은 파일이 있는지 확인
os.path.isfile(path)
파일인지 bool 값으로 리턴
os.path.isdir(path)
폴더인지 bool 값으로 리턴

os.path에서 stat로 확인할 수 있는 정보들 중 자주 사용되는 api
os.path.getsize(path)
파일 또는 디렉토리 자체의 크기를 바이트 단위로 변환
os.path.getatime(path)
파일에 접근한 시간
os.path.getmtime(path)
파일을 수정한 시간
os.path.getctime(path)
파일을 생성한 시간